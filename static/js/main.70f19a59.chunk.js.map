{"version":3,"sources":["services/routes.js","features/UserAuth/layouts/Footer.js","features/UserAuth/services/constants.js","features/UserAuth/core/StyledLink.js","features/UserAuth/core/StyledInput.js","features/UserAuth/components/Input.js","features/UserAuth/core/StyledForm.js","features/UserAuth/services/validationSchemas.js","features/UserAuth/core/StyledHeader.js","features/UserAuth/core/StyledHeaderTitle.js","features/UserAuth/core/StyledSubmitButton.js","features/UserAuth/services/inputLists.js","features/UserAuth/components/SignInForm.js","features/UserAuth/SignIn.js","features/UserAuth/components/SignUpForm.js","features/UserAuth/SignUp.js","features/UserAuth/core/StyledGoBackButton.js","features/UserAuth/components/RestorePassForm.js","features/UserAuth/layouts/AuthPageLayout.js","features/UserAuth/index.js","App.js","reportWebVitals.js","services/redux/rootReducer.js","index.js","features/UserAuth/images/icon-mail.svg","features/UserAuth/images/icon-person.svg","features/UserAuth/images/icon-lock.svg","features/UserAuth/images/icon-block-eye.svg","features/UserAuth/images/schevron.svg","features/UserAuth/images/icon-accept.svg","features/UserAuth/images/icon-schevron-grey.svg","features/UserAuth/images/bg.png"],"names":["routes","Footer","styled","div","FooterText","p","FooterLayout","props","text","link","grey","blue","StyledLink","a","constants","StyledInput","input","attrs","minLength","autoComplete","required","noValidate","InputWrapper","InputIcon","img","InputBlockEye","InputError","span","Input","useState","isShow","setShow","src","icon","placeholder","type","touched","error","iconEye","onClick","_","StyledForm","form","signInSchema","Yup","shape","email","password","min","signUpSchema","firstName","max","lastName","passwordConfirm","restorePassSchema","StyledHeader","StyledHeaderTitle","h1","StyledSubmitButton","button","Chevron","imgChevron","SubmitButton","children","signupInputList","iconPerson","name","iconEmail","iconLock","iconAccept","signinInputList","restorePasswordInputList","Link","SignInForm","navigate","useNavigate","formik","useFormik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","handleSubmit","map","key","onChange","handleChange","onBlur","handleBlur","value","errors","SignIn","SignUpForm","SignUp","StyledGoBackButton","iconChevron","FormText","SpanEmail","RestorePassForm","isSubmitted","setSubmitted","setEmail","AuthPage","imgAuthPageBackground","AuthContent","AuthPageLayout","UserAuth","exact","path","element","App","loggedIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","action","result","console","log","getState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70f19a59.chunk.js","sourcesContent":["export const routes = {\r\n    signin: '/sign-in',\r\n    signup: '/sign-up',\r\n    restorepassword: '/restore-password',\r\n}\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = styled.div`\r\n  @media only screen and (min-width: 560px) {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\nconst FooterText = styled.p`\r\n  font-size: 15px;\r\n  line-height: 21px;\r\n  margin: 0 12px 0 0;\r\n`\r\n\r\nconst FooterLayout = (props) => {\r\n    return (\r\n        <Footer>\r\n            <FooterText>{props.text}</FooterText>\r\n            {props.link ? props.link : ''}\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default FooterLayout\r\n","export const font = `'Poppins', 'Arial', sans-serif`;\r\nexport const grey = `#A1ABC9`\r\nexport const formBackgroundColor = `#F9FAFF`\r\nexport const blue = `#7297FF`\r\nexport const green = `#34C197`\r\nexport const red = `#FF2567`\r\nexport const white = `#ffffff`\r\nexport const darkGrey = `#202225`;\r\nexport const lightBlue = `#E3EBFF`\r\nexport const greySolid = `#dce0ec`;\r\n\r\nexport const minNameLength = 4\r\nexport const maxNameLength = 15\r\nexport const minPassLength = 4\r\n","import styled from \"styled-components\";\r\nimport * as constants from \"../services/constants\";\r\n\r\nconst StyledLink = styled.a`\r\n  font-size: 15px;\r\n  line-height: 19px;\r\n  color: ${constants.blue};\r\n  font-weight: 600;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`\r\n\r\nexport default StyledLink\r\n","import styled from \"styled-components\";\r\nimport * as constants from \"../services/constants\";\r\n\r\n\r\nconst StyledInput = styled.input.attrs((props) => ({\r\n    minLength: `${constants.minNameLength}`,\r\n    autoComplete: 'off',\r\n    required: true,\r\n    noValidate: true\r\n}))`\r\n  width: 100%;\r\n  border: 1px solid ${constants.greySolid};\r\n  border-radius: 8px;\r\n  color: ${constants.darkGrey};\r\n  padding: 7px 47px;\r\n  background-position-y: center;\r\n  background-position-x: 18px;\r\n  background-color: ${constants.white};\r\n  font-size: 15px;\r\n  line-height: 24px;\r\n\r\n  &:focus {\r\n    border: 1px solid ${constants.blue};\r\n    outline: none;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n    color: ${constants.grey};\r\n  }\r\n\r\n  &.invalid {\r\n    border: 1px solid #ff2567;\r\n  }\r\n\r\n  &.invalid:focus {\r\n    border: 1px solid #ff2567;\r\n    outline: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 560px) {\r\n    font-size: 17px;\r\n    padding: 15px 64px;\r\n    &::placeholder {\r\n      font-size: 17px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default StyledInput\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StyledInput from '../core/StyledInput'\r\nimport iconEye from \"../images/icon-block-eye.svg\";\r\n\r\nconst InputWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n  position: relative;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 32px\r\n  }\r\n\r\n  @media only screen and (min-width: 560px) {\r\n    margin-bottom: 32px;\r\n    &:last-of-type {\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n`\r\nconst InputIcon = styled.img`\r\n  box-sizing: border-box;\r\n  border: none;\r\n  position: absolute;\r\n  width: 24px;\r\n  height: 24px;\r\n  top: 8px;\r\n  left: 16px;\r\n  @media only screen and (min-width: 560px) {\r\n    top: 16px;\r\n    left: 24px;\r\n  }\r\n`\r\nconst InputBlockEye = styled(InputIcon)`\r\n  cursor: pointer;\r\n  right: 7.2%;\r\n  left: auto;\r\n\r\n  @media only screen and (min-width: 560px) {\r\n    right: 6.5%;\r\n    left: auto;\r\n  }\r\n`\r\n\r\nconst InputError = styled.span`\r\n  font-size: 13px;\r\n  line-height: 16px;\r\n  letter-spacing: -0.24px;\r\n  color: #f6657f;\r\n  margin-top: 14px;\r\n  display: block;\r\n  @media only screen and (min-width: 560px) {\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nconst Input = props => {\r\n    const [isShow, setShow] = useState(false)\r\n    const handleShow = _ => {\r\n        setShow(!isShow)\r\n    }\r\n    return (\r\n        <InputWrapper>\r\n            <InputIcon src={props.icon}/>\r\n            <StyledInput placeholder={props.placeholder}\r\n                         type={props.type === 'password' ? (isShow ? 'password' : 'text') : props.type}\r\n                         {...props}\r\n            />\r\n            {props.touched && props.error ? (\r\n                <InputError>{props.error}</InputError>\r\n            ) : null}\r\n            {props.type === 'password' &&\r\n            <InputBlockEye src={iconEye} onClick={handleShow}/>\r\n            }\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 0 auto;\r\n`\r\n\r\nexport default StyledForm\r\n","import * as Yup from 'yup';\r\nimport {\r\n    minNameLength, maxNameLength, minPassLength\r\n}\r\n from \"./constants\";\r\n\r\nexport const signInSchema = Yup.object().shape(({\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .required('This field is required'),\r\n    password: Yup.string()\r\n        .min(minPassLength, 'Password must contain at least 4 symbols')\r\n        .required('This field is required'),\r\n}));\r\n\r\nexport const signUpSchema = Yup.object().shape(({\r\n    firstName: Yup.string()\r\n        .min(minNameLength, 'Name must contain at least 2 symbols')\r\n        .max(maxNameLength, 'Maximum characters exceeded')\r\n        .required('This field is required'),\r\n    lastName: Yup.string()\r\n        .min(minNameLength, 'Name must contain at least 2 symbols')\r\n        .max(maxNameLength, 'Maximum characters exceeded')\r\n        .required('This field is required'),\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .required('This field is required'),\r\n    password: Yup.string()\r\n        .min(minPassLength, 'Password must contain at least 4 symbols')\r\n        .required('This field is required'),\r\n    passwordConfirm: Yup.string()\r\n        .min(minPassLength, 'Password must contain at least 4 symbols')\r\n        .required('This field is required'),\r\n}));\r\n\r\nexport const restorePassSchema = Yup.object().shape(({\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .required('This field is required'),\r\n}));\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: start;\r\n      margin-bottom: 24px;\r\n      @media only screen and (min-width: 560px) {\r\n        margin-bottom: 40px;\r\n      }\r\n    `\r\n\r\nexport default StyledHeader\r\n","import styled from \"styled-components\";\r\nimport * as constants from \"../services/constants\";\r\n\r\nconst StyledHeaderTitle = styled.h1`\r\n  font-size: 20px;\r\n  line-height: 32px;\r\n  color: ${constants.darkGrey};\r\n  font-weight: 600;\r\n  margin: 0;\r\n  @media only screen and (min-width: 560px) {\r\n    width: 560px;\r\n    font-size: 24px;\r\n  }\r\n`\r\n\r\nexport default StyledHeaderTitle\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport * as constants from \"../services/constants\";\r\nimport imgChevron from \"../images/schevron.svg\";\r\n\r\nconst StyledSubmitButton = styled.button.attrs((props) => ({\r\n    type: 'submit',\r\n}))`\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n  background: ${constants.blue};\r\n  color: ${constants.white};\r\n  padding: 12px 16px 12px 16px;\r\n  outline: none;\r\n  border: none;\r\n  margin: 0 auto 0 0;\r\n  font-size: 15px;\r\n  line-height: 19px;\r\n  font-weight: 500;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  &:disabled {\r\n    background: ${constants.grey}\r\n  }\r\n\r\n  @media only screen and (min-width: 560px) {\r\n    font-size: 17px;\r\n    line-height: 25px;\r\n    margin-top: 24px;\r\n    margin-bottom: 32px;\r\n    padding: 16px 25px 16px 24px;\r\n  }\r\n`\r\nconst Chevron = styled.span`\r\n  display: block;\r\n  background-image: url(${imgChevron});\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  width: 24px;\r\n  height: 24px;\r\n  color: ${constants.white};\r\n  padding: 5px;\r\n  margin-left: 8px;\r\n`\r\nconst SubmitButton = props =>\r\n    <StyledSubmitButton {...props}>\r\n        {props.children}\r\n        <Chevron/>\r\n    </StyledSubmitButton>\r\n\r\nexport default SubmitButton\r\n","import iconPerson from \"../images/icon-person.svg\";\r\nimport iconEmail from \"../images/icon-mail.svg\";\r\nimport iconLock from \"../images/icon-lock.svg\";\r\nimport iconAccept from \"../images/icon-accept.svg\";\r\n\r\nexport const signupInputList = [\r\n    {\r\n        icon: iconPerson,\r\n        placeholder: `First Name`,\r\n        name: 'firstName'\r\n    },\r\n    {\r\n        icon: iconPerson,\r\n        placeholder: `Second Name`,\r\n        name: 'lastName'\r\n    },\r\n    {\r\n        icon: iconEmail,\r\n        type: 'email',\r\n        placeholder: 'Email',\r\n        name: 'email'\r\n    },\r\n    {\r\n        icon: iconLock,\r\n        type: 'password',\r\n        placeholder: 'Password',\r\n        name: 'password'\r\n    },\r\n    {\r\n        icon: iconAccept,\r\n        type: 'password',\r\n        placeholder: 'Confirm password',\r\n        name: 'passwordConfirm'\r\n    }\r\n]\r\n\r\nexport const signinInputList = [\r\n    {\r\n        icon: iconEmail,\r\n        placeholder: `Email`,\r\n        type: 'email',\r\n        name: 'email'\r\n    },\r\n    {\r\n        icon: iconLock,\r\n        placeholder: `Password`,\r\n        type: 'password',\r\n        name: 'password'\r\n    },\r\n]\r\n\r\nexport const restorePasswordInputList = [\r\n    {\r\n        icon: iconEmail,\r\n        placeholder: `Email`,\r\n        name: 'email'\r\n    },\r\n]\r\n","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport Input from \"./Input\";\r\nimport styled from \"styled-components\";\r\nimport StyledForm from \"../core/StyledForm\";\r\nimport {signInSchema} from '../services/validationSchemas'\r\nimport StyledHeader from \"../core/StyledHeader\";\r\nimport StyledHeaderTitle from \"../core/StyledHeaderTitle\";\r\nimport StyledSubmitButton from \"../core/StyledSubmitButton\";\r\nimport {signinInputList} from \"../services/inputLists\";\r\nimport * as constants from \"../services/constants\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Link = styled.a`\r\n  margin-top: 32px;\r\n  font-size: 15px;\r\n  line-height: 22px;\r\n  color: ${constants.blue};\r\n  font-weight: 500;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`\r\n\r\nconst SignInForm = props => {\r\n    const navigate = useNavigate()\r\n    const handleRestore = _ => {\r\n        navigate('/restore-password')\r\n    }\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: '',\r\n                password: '',\r\n            },\r\n            validationSchema: signInSchema,\r\n            onSubmit: values => {\r\n                alert(JSON.stringify(values, null, 2));\r\n            }\r\n        }\r\n    )\r\n    return (\r\n        <StyledForm onSubmit={formik.handleSubmit}>\r\n            <StyledHeader>\r\n                <StyledHeaderTitle>Sign In</StyledHeaderTitle>\r\n            </StyledHeader>\r\n            {signinInputList.map(input => {\r\n                return (\r\n                    <Input key={`signinform-${input.name}`}\r\n                           icon={input.icon}\r\n                           placeholder={input.placeholder}\r\n                           type={input.type}\r\n                           name={input.name}\r\n                           onChange={formik.handleChange}\r\n                           onBlur={formik.handleBlur}\r\n                           value={formik.values[input.name]}\r\n                           touched={formik.touched[input.name]}\r\n                           error={formik.errors[input.name]}\r\n                    />\r\n                )\r\n            })}\r\n            <StyledSubmitButton>Sign In</StyledSubmitButton>\r\n            <Link onClick={handleRestore}>Forgot Password?</Link>\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nexport default SignInForm\r\n","import React from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport FooterLayout from \"./layouts/Footer\";\r\nimport StyledLink from \"./core/StyledLink\";\r\nimport SignInForm from \"./components/SignInForm\";\r\n\r\nfunction SignIn() {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <SignInForm/>\r\n            <FooterLayout text={'Don`t have an account?'} link={\r\n                <StyledLink onClick={() => {\r\n                    navigate('/sign-up')\r\n                }}>Sign up</StyledLink>}>\r\n            </FooterLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport Input from \"./Input\";\r\nimport StyledForm from \"../core/StyledForm\";\r\nimport {signUpSchema} from '../services/validationSchemas'\r\nimport StyledHeader from \"../core/StyledHeader\";\r\nimport StyledHeaderTitle from \"../core/StyledHeaderTitle\";\r\nimport StyledSubmitButton from \"../core/StyledSubmitButton\";\r\nimport {signupInputList} from \"../services/inputLists\";\r\n\r\nconst SignUpForm = props => {\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                password: '',\r\n                passwordConfirm: ''\r\n            },\r\n            validationSchema: signUpSchema,\r\n            onSubmit: values => {\r\n                alert(JSON.stringify(values, null, 2));\r\n            }\r\n        }\r\n    )\r\n    return (\r\n        <StyledForm onSubmit={formik.handleSubmit}>\r\n            <StyledHeader>\r\n                <StyledHeaderTitle>Sign Up</StyledHeaderTitle>\r\n            </StyledHeader>\r\n            {signupInputList.map(input => {\r\n                return (\r\n                    <Input key={`signupform-${input.name}`}\r\n                           icon={input.icon}\r\n                           placeholder={input.placeholder}\r\n                           type={input.type}\r\n                           name={input.name}\r\n                           onChange={formik.handleChange}\r\n                           onBlur={formik.handleBlur}\r\n                           value={formik.values[input.name]}\r\n                           touched={formik.touched[input.name]}\r\n                           error={formik.errors[input.name]}\r\n                    />\r\n                )\r\n            })}\r\n            <StyledSubmitButton>Sign Up</StyledSubmitButton>\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nexport default SignUpForm\r\n","import React from 'react'\r\nimport SignUpForm from \"./components/SignUpForm\";\r\nimport {useNavigate} from 'react-router-dom'\r\nimport FooterLayout from \"./layouts/Footer\";\r\nimport StyledLink from \"./core/StyledLink\";\r\n\r\n\r\nfunction SignUp(props) {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <SignUpForm/>\r\n            <FooterLayout text={'Already have an account?'} link={\r\n                <StyledLink onClick={() => {\r\n                    navigate('/sign-in')\r\n                }}>Sign In</StyledLink>}>\r\n            </FooterLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import styled from \"styled-components\";\r\nimport iconChevron from '../images/icon-schevron-grey.svg'\r\n\r\nconst StyledGoBackButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  background: url(${iconChevron}) no-repeat center;\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-right: 16px;\r\n  background-color: inherit;\r\n  display: block;\r\n`\r\n\r\nexport default StyledGoBackButton\r\n","import React, {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport Input from \"./Input\";\r\nimport StyledForm from \"../core/StyledForm\";\r\nimport styled from \"styled-components\";\r\nimport {restorePassSchema} from '../services/validationSchemas'\r\nimport StyledHeader from \"../core/StyledHeader\";\r\nimport StyledHeaderTitle from \"../core/StyledHeaderTitle\";\r\nimport StyledSubmitButton from \"../core/StyledSubmitButton\";\r\nimport {restorePasswordInputList} from \"../services/inputLists\";\r\nimport * as constants from \"../services/constants\";\r\nimport StyledGoBackButton from \"../core/StyledGoBackButton\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst FormText = styled.p`\r\n  font-size: 15px;\r\n  line-height: 130%;\r\n  color: ${constants.grey};\r\n  margin-bottom: 24px;\r\n`\r\nconst SpanEmail = styled.span`\r\n  color: ${constants.blue};\r\n  text-decoration-line: underline;\r\n`\r\n\r\n\r\nconst RestorePassForm = props => {\r\n    const navigate = useNavigate()\r\n    const handleGoBack = _ => {\r\n        navigate('/sign-in')\r\n    }\r\n    const [isSubmitted, setSubmitted] = useState(false)\r\n    const [email, setEmail] = useState('example@exam.com')\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: ''\r\n            },\r\n            validationSchema: restorePassSchema,\r\n            onSubmit: values => {\r\n                setSubmitted(!isSubmitted)\r\n                setEmail(values.email)\r\n            }\r\n        }\r\n    )\r\n    return (\r\n        <StyledForm onSubmit={formik.handleSubmit}>\r\n            <StyledHeader>\r\n                <StyledGoBackButton onClick={handleGoBack}/>\r\n                <StyledHeaderTitle>Restore Password</StyledHeaderTitle>\r\n            </StyledHeader>\r\n            {!isSubmitted ?\r\n                <>\r\n                    <FormText>\r\n                        Please use your email address, and we`ll send you the link to reset\r\n                        your password\r\n                    </FormText>\r\n                    {restorePasswordInputList.map(input => {\r\n                        return (\r\n                            <Input key={`RestorePassForm-${input.name}`}\r\n                                   icon={input.icon}\r\n                                   placeholder={input.placeholder}\r\n                                   type={input.type}\r\n                                   name={input.name}\r\n                                   onChange={formik.handleChange}\r\n                                   onBlur={formik.handleBlur}\r\n                                   value={formik.values[input.name]}\r\n                                   touched={formik.touched[input.name]}\r\n                                   error={formik.errors[input.name]}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <StyledSubmitButton>Send Reset link</StyledSubmitButton>\r\n                </>\r\n                :\r\n                <>\r\n                    <FormText>An email has been sent to <SpanEmail>{email}</SpanEmail>. Check your\r\n                        inbox, and click\r\n                        the reset\r\n                        link\r\n                        provided.</FormText>\r\n                </>\r\n            }\r\n\r\n\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nexport default RestorePassForm\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport imgAuthPageBackground from \"../images/bg.png\";\r\nimport * as constants from \"../services/constants\";\r\n\r\nconst AuthPage = styled.div`\r\n  background-image: url(${imgAuthPageBackground});\r\n  height: 100vh;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  color: ${constants.grey};\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  @media only screen and (min-width: 560px) {\r\n    background-size: cover;\r\n    flex-direction: row-reverse;\r\n  }\r\n`;\r\n\r\nconst AuthContent = styled.div`\r\n  max-width: 560px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${constants.formBackgroundColor};\r\n  border-radius: 24px 24px 0 0;\r\n  padding: 32px 10% 44px;\r\n  height: calc(100% - 72px);\r\n  @media only screen and (min-width: 560px) {\r\n    border-radius: 0;\r\n    height: 100%;\r\n    padding: 168px 96px 80px 96px;\r\n  }\r\n`;\r\n\r\nconst AuthPageLayout = (props) => {\r\n    return (\r\n        <AuthPage>\r\n            <AuthContent>\r\n                {props.children}\r\n            </AuthContent>\r\n        </AuthPage>\r\n    )\r\n}\r\n\r\nexport default AuthPageLayout\r\n","import SignIn from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\nimport RestorePassForm from \"./components/RestorePassForm\";\r\nimport AuthPageLayout from \"./layouts/AuthPageLayout\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {routes} from \"../../services/routes\";\r\nimport React from \"react\";\r\n\r\nconst UserAuth = props => {\r\n    return (\r\n        <AuthPageLayout>\r\n            <Routes>\r\n                <Route exact path={'/'} element={<SignUp/>}/>\r\n                <Route path={routes.signup} element={<SignUp/>}/>\r\n                <Route path={routes.signin} element={<SignIn/>}/>\r\n                <Route path={routes.restorepassword} element={<RestorePassForm/>}/>\r\n            </Routes>\r\n        </AuthPageLayout>\r\n    )\r\n}\r\n\r\nexport default UserAuth\r\n","import React, {useState} from 'react';\nimport {Route, Routes} from 'react-router-dom';\n\nimport {routes} from './services/routes'\nimport UserAuth from \"./features/UserAuth\";\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(false)\n    return (\n        <>\n            {!loggedIn ?\n                <UserAuth/>\n                :\n                <Routes>\n                    {/*<Route path=\"\" element={<Patients/>}/>*/}\n                    {/*<Route path=\"patients\" element={<Patients/>}/>*/}\n                    {/*<Route path=\"appointments\" element={<Appointments/>}/>*/}\n                </Routes>\n            }\n        </>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\n\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {rootReducer} from \"./services/redux/rootReducer\";\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n    const result = next(action);\n    console.log(\"Middleware\", store.getState());\n    return result;\n};\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(loggerMiddleware)\n));\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/icon-mail.15c53daa.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-person.2735a298.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.ad7b027f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-block-eye.f7c650e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/schevron.4d41c31f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-accept.af8116e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-schevron-grey.dd0735d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.07d6c719.png\";"],"sourceRoot":""}